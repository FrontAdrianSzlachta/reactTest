{"ast":null,"code":"const swapiApiUrl = 'https://swapi.co/api/';\nconst endpoints = {\n  people: swapiApiUrl + \"people/\"\n};\nexport default function getAllPeoples() {\n  return function (dispatch) {\n    dispatch({\n      type: \"SET_LOADING\",\n      isLoading: true\n    });\n    return fetch(endpoints.people, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=utf-8',\n        'X-Requested-With': 'XMLHttpRequest'\n      })\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: \"SET_PEOPLES\",\n        peoples: json.results\n      });\n      dispatch({\n        type: \"SET_NEXT_PAGE\",\n        next: json.next\n      });\n      dispatch({\n        type: \"SET_PREVIOUS_PAGE\",\n        prev: json.previous\n      });\n      dispatch({\n        type: \"SET_LOADING\",\n        isLoading: false\n      });\n    });\n  };\n}\nexport function getAllPeoplesFromPage(link) {\n  return function (dispatch) {\n    dispatch({\n      type: \"SET_LOADING\",\n      isLoading: true\n    });\n    return fetch(link, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=utf-8',\n        'X-Requested-With': 'XMLHttpRequest'\n      })\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: \"SET_PEOPLES\",\n        peoples: json.results\n      });\n      dispatch({\n        type: \"SET_NEXT_PAGE\",\n        next: json.next\n      });\n      dispatch({\n        type: \"SET_PREVIOUS_PAGE\",\n        prev: json.previous\n      });\n      dispatch({\n        type: \"SET_LOADING\",\n        isLoading: false\n      });\n    });\n  };\n}\nexport function getPerson(id) {\n  return function (dispatch) {\n    dispatch({\n      type: \"SET_LOADING\",\n      isLoading: true\n    });\n    return fetch(endpoints.people + \"\" + id + \"/?format=json\", {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: \"SET_PERSON\",\n        person: json\n      });\n      dispatch({\n        type: \"SET_LOADING\",\n        isLoading: false\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/adrian/reactTest/src/services/swapi.js"],"names":["swapiApiUrl","endpoints","people","getAllPeoples","dispatch","type","isLoading","fetch","method","headers","Headers","then","response","json","peoples","results","next","prev","previous","getAllPeoplesFromPage","link","getPerson","id","person"],"mappings":"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","sourcesContent":["const swapiApiUrl = 'https://swapi.co/api/'\nconst endpoints = {\n    people: swapiApiUrl + \"people/\"\n}\n\nexport default function getAllPeoples() {\n    return function(dispatch) {\n        dispatch({ type: \"SET_LOADING\", isLoading: true });\n        return fetch(endpoints.people, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json; charset=utf-8',\n                'X-Requested-With': 'XMLHttpRequest'\n            })\n        })\n        .then((response) => response.json())\n        .then((json) => {\n            dispatch({ type: \"SET_PEOPLES\", peoples: json.results });\n            dispatch({ type: \"SET_NEXT_PAGE\", next: json.next });\n            dispatch({ type: \"SET_PREVIOUS_PAGE\", prev: json.previous });\n            dispatch({ type: \"SET_LOADING\", isLoading: false });\n        });\n    };\n}\n\nexport function getAllPeoplesFromPage(link) {\n    return function(dispatch) {\n        dispatch({ type: \"SET_LOADING\", isLoading: true });\n        return fetch(link, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json; charset=utf-8',\n                'X-Requested-With': 'XMLHttpRequest'\n            })\n        })\n        .then((response) => response.json())\n        .then(json => {\n            dispatch({ type: \"SET_PEOPLES\", peoples: json.results });\n            dispatch({ type: \"SET_NEXT_PAGE\", next: json.next });\n            dispatch({ type: \"SET_PREVIOUS_PAGE\", prev: json.previous });\n            dispatch({ type: \"SET_LOADING\", isLoading: false });\n        });\n    }\n}\n\nexport function getPerson(id) {\n    return function(dispatch) {\n        dispatch({ type: \"SET_LOADING\", isLoading: true });\n        return fetch(endpoints.people + \"\" + id + \"/?format=json\", {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n            })\n        })\n        .then((response) => response.json())\n        .then(json => {\n            dispatch({ type: \"SET_PERSON\", person: json });\n            dispatch({ type: \"SET_LOADING\", isLoading: false });\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}