{"ast":null,"code":"var _jsxFileName = \"/home/adrian/reactTest/src/components/PeopleList.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport getAllPeoples, { getAllPeoplesFromPage } from '../services/swapi.js';\nimport Icon from '@mdi/react';\nimport { mdiAccountBadgeHorizontal, mdiAppleKeyboardControl } from '@mdi/js';\nexport class PeopleList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onePerson = people => {\n      const name = people.name;\n      const id = people.url.replace(\"https://swapi.co/api/people/\", \"\");\n      return React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: `person/${id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"card-header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, name), React.createElement(Icon, {\n        path: mdiAccountBadgeHorizontal,\n        size: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }))));\n    };\n\n    this.nextPage = () => {\n      if (this.props.next) {\n        this.props.getAllPeoplesFromPage(this.props.next);\n      }\n    };\n\n    this.prevPage = () => {\n      if (this.props.prev) {\n        this.props.getAllPeoplesFromPage(this.props.prev);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllPeoples();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"c-peopleList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pageloader \" + (this.props.isLoading ? 'is-active' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(\"ul\", {\n      id: \"c-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.peoples.map(this.onePerson)), React.createElement(\"div\", {\n      className: \"pagination is-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"pagination-previous\",\n      onClick: this.prevPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiAppleKeyboardControl,\n      size: 2,\n      rotate: -90,\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      className: \"pagination-next\",\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiAppleKeyboardControl,\n      size: 2,\n      rotate: 90,\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    peoples: state.peoples,\n    next: state.next,\n    prev: state.prev,\n    isLoading: state.isLoading\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getAllPeoples,\n  getAllPeoplesFromPage\n})(PeopleList);","map":{"version":3,"sources":["/home/adrian/reactTest/src/components/PeopleList.jsx"],"names":["React","Component","connect","getAllPeoples","getAllPeoplesFromPage","Icon","mdiAccountBadgeHorizontal","mdiAppleKeyboardControl","PeopleList","constructor","props","onePerson","people","name","id","url","replace","nextPage","next","prevPage","prev","componentDidMount","render","isLoading","peoples","map","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport getAllPeoples, { getAllPeoplesFromPage } from '../services/swapi.js';\nimport Icon from '@mdi/react'\nimport { mdiAccountBadgeHorizontal, mdiAppleKeyboardControl } from '@mdi/js'\n\nexport class PeopleList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.getAllPeoples();\n    }\n\n    onePerson = people => {\n        const name = people.name;\n        const id = people.url.replace(\"https://swapi.co/api/people/\", \"\");\n\n        return (\n            <div className=\"card\">\n                <header className=\"card-header\">\n                    <a href={`person/${id}`}>\n                        <p className=\"card-header-title\">\n                            { name }\n                        </p>\n                        <Icon path={mdiAccountBadgeHorizontal} size={1} />\n                    </a>\n                </header>\n            </div>\n        );\n    }\n\n    nextPage = () => {\n        if(this.props.next) {\n            this.props.getAllPeoplesFromPage(this.props.next);\n        }\n    }\n\n    prevPage = () => {\n        if(this.props.prev) {\n            this.props.getAllPeoplesFromPage(this.props.prev);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"c-peopleList\">\n                <div className={\"pageloader \" + (this.props.isLoading ? 'is-active' : '')}><span className=\"title\">Loading...</span></div>\n                <ul id=\"c-list\">\n                    {this.props.peoples.map(this.onePerson)}\n                </ul>\n                <div className=\"pagination is-centered\">\n                    <a className=\"pagination-previous\" onClick={this.prevPage}><Icon path={mdiAppleKeyboardControl} size={2} rotate={-90} color=\"white\"/></a>\n                    <a className=\"pagination-next\" onClick={this.nextPage}><Icon path={mdiAppleKeyboardControl} size={2} rotate={90} color=\"white\" /></a>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        peoples: state.peoples,\n        next: state.next,\n        prev: state.prev,\n        isLoading: state.isLoading\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    { getAllPeoples, getAllPeoplesFromPage }\n)(PeopleList);"]},"metadata":{},"sourceType":"module"}